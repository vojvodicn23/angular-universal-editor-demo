import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../../shared/tooltip.directive";
export class TextColorTileComponent {
    constructor() {
        this.colorCode = 'gray';
        this.colorName = 'Default';
        this.selected = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TextColorTileComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TextColorTileComponent, selector: "text-color-tile", inputs: { colorCode: "colorCode", colorName: "colorName", selected: "selected" }, ngImport: i0, template: "<div class=\"color-tile-border\">\n    <div \n    class=\"color-tile\"\n    [tooltipText]=\"colorName\" \n    [tooltipPostition]=\"'below'\"\n    [tooltipElementPosition]=\"'absolute'\"\n    [style.background-color]=\"colorCode\"\n    >\n    <svg *ngIf=\"selected\" class=\"selected-icon\" [attr.fill]=\"'white'\"\n    xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\">\n        <path d=\"M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z\"/>\n    </svg>\n</div>\n\n\n", styles: [".color-tile-border{border:1px transparent solid;padding:1px;border-radius:4px}.color-tile{width:26px;height:26px;border-radius:4px;position:relative;cursor:pointer}.color-tile-border:hover{border-color:#d3d3d3}.selected-icon{background-size:22px;background-position:center center;background-repeat:no-repeat;width:22px;height:22px;display:inline-block;position:relative;vertical-align:middle;left:2px;top:1px}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.TooltipDirective, selector: "[tooltipText]", inputs: ["tooltipText", "tooltipPostition", "tooltipElementPosition"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TextColorTileComponent, decorators: [{
            type: Component,
            args: [{ selector: 'text-color-tile', template: "<div class=\"color-tile-border\">\n    <div \n    class=\"color-tile\"\n    [tooltipText]=\"colorName\" \n    [tooltipPostition]=\"'below'\"\n    [tooltipElementPosition]=\"'absolute'\"\n    [style.background-color]=\"colorCode\"\n    >\n    <svg *ngIf=\"selected\" class=\"selected-icon\" [attr.fill]=\"'white'\"\n    xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\">\n        <path d=\"M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z\"/>\n    </svg>\n</div>\n\n\n", styles: [".color-tile-border{border:1px transparent solid;padding:1px;border-radius:4px}.color-tile{width:26px;height:26px;border-radius:4px;position:relative;cursor:pointer}.color-tile-border:hover{border-color:#d3d3d3}.selected-icon{background-size:22px;background-position:center center;background-repeat:no-repeat;width:22px;height:22px;display:inline-block;position:relative;vertical-align:middle;left:2px;top:1px}\n"] }]
        }], propDecorators: { colorCode: [{
                type: Input
            }], colorName: [{
                type: Input
            }], selected: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC1jb2xvci10aWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC11bml2ZXJzYWwtZWRpdG9yL3NyYy9saWIvY29tcG9uZW50cy90ZXh0LWNvbG9yL3RleHQtY29sb3ItdGlsZS90ZXh0LWNvbG9yLXRpbGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXVuaXZlcnNhbC1lZGl0b3Ivc3JjL2xpYi9jb21wb25lbnRzL3RleHQtY29sb3IvdGV4dC1jb2xvci10aWxlL3RleHQtY29sb3ItdGlsZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQU9qRCxNQUFNLE9BQU8sc0JBQXNCO0lBTG5DO1FBT1csY0FBUyxHQUFHLE1BQU0sQ0FBQztRQUNuQixjQUFTLEdBQUcsU0FBUyxDQUFDO1FBQ3RCLGFBQVEsR0FBRyxLQUFLLENBQUM7S0FFM0I7K0dBTlksc0JBQXNCO21HQUF0QixzQkFBc0IseUlDUG5DLG1nQkFlQTs7NEZEUmEsc0JBQXNCO2tCQUxsQyxTQUFTOytCQUNFLGlCQUFpQjs4QkFNbEIsU0FBUztzQkFBakIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RleHQtY29sb3ItdGlsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi90ZXh0LWNvbG9yLXRpbGUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90ZXh0LWNvbG9yLXRpbGUuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIFRleHRDb2xvclRpbGVDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIGNvbG9yQ29kZSA9ICdncmF5JztcbiAgQElucHV0KCkgY29sb3JOYW1lID0gJ0RlZmF1bHQnO1xuICBASW5wdXQoKSBzZWxlY3RlZCA9IGZhbHNlO1xuICBcbn1cbiIsIjxkaXYgY2xhc3M9XCJjb2xvci10aWxlLWJvcmRlclwiPlxuICAgIDxkaXYgXG4gICAgY2xhc3M9XCJjb2xvci10aWxlXCJcbiAgICBbdG9vbHRpcFRleHRdPVwiY29sb3JOYW1lXCIgXG4gICAgW3Rvb2x0aXBQb3N0aXRpb25dPVwiJ2JlbG93J1wiXG4gICAgW3Rvb2x0aXBFbGVtZW50UG9zaXRpb25dPVwiJ2Fic29sdXRlJ1wiXG4gICAgW3N0eWxlLmJhY2tncm91bmQtY29sb3JdPVwiY29sb3JDb2RlXCJcbiAgICA+XG4gICAgPHN2ZyAqbmdJZj1cInNlbGVjdGVkXCIgY2xhc3M9XCJzZWxlY3RlZC1pY29uXCIgW2F0dHIuZmlsbF09XCInd2hpdGUnXCJcbiAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAtOTYwIDk2MCA5NjBcIiB3aWR0aD1cIjI0XCI+XG4gICAgICAgIDxwYXRoIGQ9XCJNMzgyLTI0MCAxNTQtNDY4bDU3LTU3IDE3MSAxNzEgMzY3LTM2NyA1NyA1Ny00MjQgNDI0WlwiLz5cbiAgICA8L3N2Zz5cbjwvZGl2PlxuXG5cbiJdfQ==